local ev = require('lib.samp.events')

function main()
	if not isSampLoaded() or not isSampfuncsLoaded() then return end
	while not isSampAvailable() do wait(100) end
	sampAddChatMessage('Graffiti Checker by Scrix || [/grf] [/cleargrf]', 0xffff00)
	sampRegisterChatCommand('grf', function() 	act = not act x = 0 end)
	sampRegisterChatCommand('cleargrf', function() 
		for ll = 1, #shish do   
			removeBlip(shish[ll])
		end
	end)
	while true do wait(0)
		if act == true then
			if x < #graf then
				x = x + 1
				sampSendClickTextdraw(graf[x][1])
				while not sampIsDialogActive() do wait(0) end
				sampCloseCurrentDialogWithButton(1)
			else
				act = false
				sampAddChatMessage('Сканирование закончено!', 0xffff00)
			end
		end
	end
end
-- id текстдрава граффити, координаты граффити
graf = {{1223, '1746.962890625, -1359.4196777344, 15.767086029053'},
{1178, '2768.1196289063, -1621.1129150391, 10.921875'},
{1179, '2820.9135742188, -1465.1064453125, 16.256765365601'},
{1194, '2755.7104492188, -1388.1008300781, 39.379722595215'},
{1231, '2820.3059082031, -1190.654296875, 25.214782714844'},
{1180, '2797.9372558594, -1097.3812255859, 30.71875'},
{1199, '2704.5314941406, -2144.1870117188, 11.071866989136'},
{1201, '2641.2141113281, -2022.4324951172, 13.546875'},
{1200, '2704.5354003906, -1966.3685302734, 13.546875'},
{1198, '2763.3310546875, -2011.7362060547, 13.5546875'},
{1196, '2794.2436523438, -1906.4792480469, 13.539363861084'},
{1197, '2874.83984375, -1909.1010742188, 8.1375942230225'},
{1195, '2767.9418945313, -1820.2530517578, 11.84690284729'},
{1229, '1904.5833740234, -1451.2841796875, 13.546875'},
{1222, '1732.3995361328, -963.18872070313, 40.944602966309'},
{1240, '1941.5234375, -1035.0534667969, 24.127159118652'},
{1221, '1967.1115722656, -1175.0695800781, 20.030742645264'},
{1225, '1969.2750244141, -1289.6314697266, 23.984375'},
{1224, '1973.9526367188, -1351.8447265625, 23.842720031738'},
{1239, '2576.4089355469, -1143.6075439453, 47.812858581543'},
{1210, '1926.4135742188, -2121.6755371094, 13.582395553589'},
{1209, '1808.9967041016, -2092.1162109375, 13.546875'},
{1202, '2553.9609375, -1939.8361816406, 3.859375'},
{1248, '2498.5141601563, -1978.814453125, 13.049579620361'},
{1249, '2428.6176757813, -1884.0714111328, 13.155446052551'},
{1247, '2322.93359375, -1956.5063476563, 13.173195838928'},
{1234, '2401.0595703125, -2059.8305664063, 13.106273651123'},
{1173, '2204.703125, -1966.857421875, 13.151218414307'},
{1244, '2188.2373046875, -1885.134765625, 13.137807846069'},
{1242, '2196.3920898438, -1835.3187255859, 12.779950141907'},
{1206, '2162.2541503906, -1786.5684814453, 13.105639457703'},
{1207, '2110.3903808594, -1790.5927734375, 13.161015510559'},
{1208, '2034.9300537109, -1802.6987304688, 13.154032707214'},
{1214, '1918.9583740234, -1788.1942138672, 12.992943763733'},
{1172, '1851.1765136719, -1877.5811767578, 13.143551826477'},
{1213, '1888.0909423828, -1983.3552246094, 13.153750419617'},
{1211, '1951.4520263672, -2034.0407714844, 13.155275344849'},
{1251, '1990.3397216797, -1989.6862792969, 13.152261734009'},
{1232, '2687.2158203125, -1101.2687988281, 69.355186462402'},
{1230, '2621.65625, -1092.7410888672, 69.608535766602'},
{1204, '2520.3276367188, -1715.6396484375, 13.570852279663'},
{1203, '2475.4760742188, -1746.6307373047, 13.546875'},
{1236, '2527.1088867188, -1663.7980957031, 15.166044235229'},
{1174, '2422.46484375, -1682.8662109375, 13.802033424377'},
{1243, '2307.9282226563, -1634.6461181641, 14.827047348022'},
{1205, '2273.3994140625, -1688.3843994141, 13.649815559387'},
{1220, '2241.5224609375, -1723.2664794922, 13.546875'}}

shish = {}
function ev.onShowDialog(dialogId, style, title, button1, button2, text)
if act == true then
	if string.match(text, 'Уже сейчас!') then
		xcrd, ycrd, zcrd = string.match(graf[x][2], '(.*), (.*), (.*)')
		xcrd = tonumber(xcrd)
		ycrd = tonumber(ycrd)
		zcrd = tonumber(zcrd)
		blip = addBlipForCoord(xcrd, ycrd, zcrd)
		table.insert(shish, blip)
		changeBlipColour(blip, 0xffff00ff)
	end
end
end

